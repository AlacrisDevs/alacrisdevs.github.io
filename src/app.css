@import url('https://fonts.googleapis.com/css2?family=Urbanist:ital,wght@0,100..900;1,100..900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');
@import 'tailwindcss';

:root {
    --primary: rgba(0, 108, 255, 1);
    --secondary: rgba(10, 18, 31, 1);
    --tertiary: rgba(233, 242, 255, 1);
    --white: rgba(255, 255, 255, 1);
    --black: rgba(0, 0, 0, 1);
    --text: rgba(255, 255, 255, 1);

    --h1: 3rem;
    --h2: 2.25rem;
    --h3: 1.75rem;
    --h4: 1.38rem;
    --h5: 1.12rem;
    --p: 1rem;
    --lead: 1.12rem;
    --small: 0.88rem;
    --button: 1rem;

    --line-height: 1.2;
}

* {
    box-sizing: border-box;
}

html {
    scroll-behavior: smooth;
    scroll-padding-top: 4rem;
}

body {
    font-family: 'Roboto', sans-serif;
    line-height: var(--line-height);
    color: var(--text);
    background-color: var(--secondary);
    margin: 0;
    padding: 0;
}

.font-urbanist {
    font-family: 'Urbanist', sans-serif;
}

.font-roboto {
    font-family: 'Roboto', sans-serif;
}

.h1 {
    font-family: 'Urbanist', sans-serif;
    font-size: var(--h1);
    font-weight: 700;
    line-height: var(--line-height);
    color: var(--text);
    hyphens: auto;
    overflow-wrap: anywhere;
}

.h2 {
    font-family: 'Urbanist', sans-serif;
    font-size: var(--h2);
    font-weight: 600;
    line-height: var(--line-height);
    color: var(--text);
    hyphens: auto;
    overflow-wrap: anywhere;
}

.h3 {
    font-family: 'Urbanist', sans-serif;
    font-size: var(--h3);
    font-weight: 600;
    line-height: var(--line-height);
    color: var(--text);
    hyphens: auto;
    overflow-wrap: anywhere;
}

.h4 {
    font-family: 'Urbanist', sans-serif;
    font-size: var(--h4);
    font-weight: 600;
    line-height: var(--line-height);
    color: var(--text);
    hyphens: auto;
    overflow-wrap: anywhere;
}

.h5 {
    font-family: 'Urbanist', sans-serif;
    font-size: var(--h5);
    font-weight: 500;
    line-height: var(--line-height);
    color: var(--text);
    hyphens: auto;
    overflow-wrap: anywhere;
}

.p {
    font-family: 'Roboto', sans-serif;
    font-size: var(--p);
    font-weight: 400;
    line-height: var(--line-height);
    color: var(--text);
}

.p-light {
    font-family: 'Roboto', sans-serif;
    font-size: var(--p);
    font-weight: 300;
    line-height: var(--line-height);
    color: var(--text);
}

.lead {
    font-family: 'Roboto', sans-serif;
    font-size: var(--lead);
    font-weight: 400;
    line-height: var(--line-height);
    color: var(--text);
}

.quote {
    font-family: 'Roboto', sans-serif;
    font-size: var(--lead);
    font-weight: 400;
    line-height: var(--line-height);
    color: #FFFFFFCC;
}

.small {
    font-family: 'Roboto', sans-serif;
    font-size: var(--small);
    font-weight: 400;
    line-height: var(--line-height);
    color: var(--text);
}

.button {
    font-family: 'Urbanist', sans-serif;
    font-size: var(--button);
    font-weight: 600;
    line-height: var(--line-height);
    color: var(--text);
}

.text-primary { color: var(--primary); }
.text-secondary { color: var(--secondary); }
.text-tertiary { color: var(--tertiary); }
.text-white { color: var(--white); }
.text-black { color: var(--black); }

.bg-primary { background-color: var(--primary); }
.bg-secondary { background-color: var(--secondary); }
.bg-tertiary { background-color: var(--tertiary); }
.bg-white { background-color: var(--white); }
.bg-black { background-color: var(--black); }

.border-primary { border-color: var(--primary); }
.border-secondary { border-color: var(--secondary); }
.border-tertiary { border-color: var(--tertiary); }

.btn-primary {
    background-color: var(--primary);
    border: 2px solid transparent;
    position: relative;
    overflow: hidden;
}

.btn-primary::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #0A121F;
    opacity: 0;
    transition: opacity 150ms ease;
    pointer-events: none;
}

.btn-primary:hover::before {
    opacity: 0.2;
}

.btn-primary:active::before {
    opacity: 0.5;
}

.btn-primary:disabled {
    opacity: 0.4;
    cursor: not-allowed;
}

/* Secondary Button Styles */
.btn-secondary {
    background-color: transparent;
    border: 2px solid var(--tertiary);
    color: var(--tertiary);
    position: relative;
    overflow: hidden;
    box-sizing: border-box;
}

.btn-secondary::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--white);
    opacity: 0;
    transition: opacity 150ms ease;
    pointer-events: none;
}

.btn-secondary:hover::before {
    opacity: 0.1;
}

.btn-secondary:active::before {
    background-color: #0A121F;
    opacity: 0.1;
}

.btn-secondary:active {
    border-color: rgba(233, 242, 255, 0.4);
}

.btn-secondary:disabled {
    opacity: 0.4;
    cursor: not-allowed;
}

/* Ensure single focus ring for all buttons */
button:focus,
a:focus {
    outline: none !important;
    box-shadow: 0 0 0 2px var(--tertiary) !important;
}

button:focus-visible,
a:focus-visible {
    outline: none !important;
    box-shadow: 0 0 0 2px var(--tertiary) !important;
}

/* Tertiary Button Styles */
.btn-tertiary {
    background-color: transparent;
    border: 2px solid transparent;
    color: var(--white);
    text-decoration: none;
}

.btn-tertiary .text-underline {
    position: relative;
    display: inline-block;
}

.btn-tertiary .text-underline::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    right: 0;
    height: 2px;
    background-color: transparent;
    transition: background-color 150ms ease;
}

.btn-tertiary:hover .text-underline::after {
    background-color: var(--white);
}

.btn-tertiary:active .text-underline::after {
    background-color: var(--primary);
}

.btn-tertiary:disabled {
    opacity: 0.4;
    cursor: not-allowed;
}

/* Input styles matching Secondary button aesthetics */
.input-secondary {
    width: 100%;
    padding: 0.75rem 1rem;
    background: rgba(10, 18, 31, 0.25); /* transparent fill */
    backdrop-filter: blur(8px); /* blurry background */
    -webkit-backdrop-filter: blur(8px);
    border: 1.5px solid rgba(233, 242, 255, 0.25);
    border-radius: 0.5rem;
    color: var(--white);
    transition: box-shadow 150ms ease, border-color 150ms ease, background-color 150ms ease;
}
.input-secondary::placeholder {
    color: rgba(255,255,255,0.6);
}
.input-secondary:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(0,108,255,0.6);
    border-color: rgba(233, 242, 255, 0.5);
    background: rgba(10, 18, 31, 0.35);
}

/* Ensure textarea matches input height by default */
textarea.input-secondary {
    min-height: 48px; /* similar to typical input height with padding */
    resize: vertical;
}

/* Card Component Styles */
.card-container {
    display: flex;
    width: 100%;
    /* allow card to grow with content */
    min-height: auto;
    max-height: none;
    align-items: stretch;
    flex-shrink: 0;
    border-radius: 4px;
    box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.50);
    background: var(--secondary);
    overflow: hidden;
    transition: transform 150ms ease, box-shadow 150ms ease;
    text-decoration: none;
    color: inherit;
}

.card-container:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 8px 0 rgba(0, 0, 0, 0.60);
}

.card-image {
    display: flex;
    width: 50%;
    /* keep a clean edge without inner padding/background */
    padding: 0;
    flex-direction: column;
    align-items: stretch;
    flex-shrink: 0;
    position: relative;
    overflow: hidden;
}

.card-image img {
    width: 100%;
    aspect-ratio: 16 / 9; /* maintain ratio by default (mobile / narrow) */
    height: auto;
    object-fit: cover;
    display: block; /* remove inline gap that can look like an outline */
    border: none;
}

.card-text-container {
    display: flex;
    padding: 12px;
    flex-direction: column;
    align-items: flex-start;
    gap: 12px;
    flex: 1 1 0;
    width: 50%;
    height: 100%;
    background: var(--secondary);
}

.card-title-container {
    display: flex;
    align-items: center;
    gap: 10px;
    width: 100%;
    flex-shrink: 0;
}

.card-description {
    width: 100%;
    flex: 1 1 auto;
    /* Do not truncate; let text wrap naturally */
    overflow: visible;
    text-overflow: initial;
    display: block;
    white-space: normal;
    line-height: 1.4;
    hyphens: auto;
    overflow-wrap: anywhere;
}

/* Card responsive styles */
@media (max-width: 768px) {
    /* Reduce vertical paddings to 50% on mobile */
    #projects,
    #events,
    #collaborations,
    #gallery,
    #contact {
        padding-top: 2.5rem; /* half of ~py-20 (5rem) */
        padding-bottom: 2.5rem;
    }
    /* Vertical card on small screens (image on top, title below) */
    .card-container {
        flex-direction: column;
        width: 100%;
        height: auto;
        min-height: auto;
        max-height: none;
    }

    .card-image {
        width: 100%;
        padding: 0;
    }

    .card-image img {
        aspect-ratio: 16/9;
        height: auto;
        object-fit: cover;
    }

    .card-text-container {
        width: 100%;
        padding: 12px;
    }

    /* Hide descriptions on mobile to make cards tidy in a 2-column grid */
    .card-description {
        display: none;
    }
}

@media (min-width: 769px) and (max-width: 1024px) {
    .card-container {
        width: 100%;
    }
}

/* XL breakpoint: make images fill the full card height while text defines height */
@media (min-width: 1280px) {
    .card-container {
        flex-direction: row;
        align-items: stretch; /* children equal height */
    }
    .card-image {
        width: 50%;
        height: auto;
    }
    .card-image img {
        height: 100%; /* fill column height */
        aspect-ratio: auto; /* allow height to control */
        object-fit: cover;
    }
}

/* Center single-column grids on pages where we show cards */
@media (max-width: 1279px) {
    #projects .grid,
    #events .grid,
    #collaborations .grid {
        max-width: 768px;
        margin-left: auto;
        margin-right: auto;
    }
}